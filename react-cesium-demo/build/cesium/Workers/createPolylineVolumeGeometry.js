define(["./when-4bbc8319","./Matrix2-ccd5b911","./arrayRemoveDuplicates-18786327","./BoundingRectangle-2b0e1a9b","./Transforms-d5c6ad6e","./ComponentDatatype-93750d1a","./PolylineVolumeGeometryLibrary-6bb54199","./RuntimeError-346a3079","./GeometryAttribute-c30799b8","./GeometryAttributes-7827a6c2","./GeometryPipeline-548e76d2","./IndexDatatype-b7d979a6","./PolygonPipeline-83fb62b0","./VertexFormat-71718faa","./combine-83860057","./WebGLConstants-1c8239cc","./EllipsoidTangentPlane-e000bae1","./AxisAlignedBoundingBox-883f9c89","./IntersectionTests-4d6f5c54","./Plane-18bb00f8","./PolylinePipeline-8457214f","./EllipsoidGeodesic-19ea7553","./EllipsoidRhumbLine-aa9e6266","./AttributeCompression-1f045b73","./EncodedCartesian3-08b8d980"],(function(e,t,n,a,i,r,o,l,s,p,d,c,u,m,y,g,h,f,b,v,P,E,_,k,L){"use strict";function V(n){var a=(n=e.defaultValue(n,e.defaultValue.EMPTY_OBJECT)).polylinePositions,i=n.shapePositions;this._positions=a,this._shape=i,this._ellipsoid=t.Ellipsoid.clone(e.defaultValue(n.ellipsoid,t.Ellipsoid.WGS84)),this._cornerType=e.defaultValue(n.cornerType,o.CornerType.ROUNDED),this._vertexFormat=m.VertexFormat.clone(e.defaultValue(n.vertexFormat,m.VertexFormat.DEFAULT)),this._granularity=e.defaultValue(n.granularity,r.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry",a=1+a.length*t.Cartesian3.packedLength,a+=1+i.length*t.Cartesian2.packedLength,this.packedLength=a+t.Ellipsoid.packedLength+m.VertexFormat.packedLength+2}V.pack=function(n,a,i){var r;i=e.defaultValue(i,0);var o=n._positions,l=o.length;for(a[i++]=l,r=0;r<l;++r,i+=t.Cartesian3.packedLength)t.Cartesian3.pack(o[r],a,i);var s=n._shape;l=s.length;for(a[i++]=l,r=0;r<l;++r,i+=t.Cartesian2.packedLength)t.Cartesian2.pack(s[r],a,i);return t.Ellipsoid.pack(n._ellipsoid,a,i),i+=t.Ellipsoid.packedLength,m.VertexFormat.pack(n._vertexFormat,a,i),i+=m.VertexFormat.packedLength,a[i++]=n._cornerType,a[i]=n._granularity,a};var x=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),C=new m.VertexFormat,F={polylinePositions:void 0,shapePositions:void 0,ellipsoid:x,vertexFormat:C,cornerType:void 0,granularity:void 0};V.unpack=function(n,a,i){a=e.defaultValue(a,0);for(var r=n[a++],o=new Array(r),l=0;l<r;++l,a+=t.Cartesian3.packedLength)o[l]=t.Cartesian3.unpack(n,a);r=n[a++];var s=new Array(r);for(l=0;l<r;++l,a+=t.Cartesian2.packedLength)s[l]=t.Cartesian2.unpack(n,a);var p=t.Ellipsoid.unpack(n,a,x);a+=t.Ellipsoid.packedLength;var d=m.VertexFormat.unpack(n,a,C);a+=m.VertexFormat.packedLength;var c=n[a++],u=n[a];return e.defined(i)?(i._positions=o,i._shape=s,i._ellipsoid=t.Ellipsoid.clone(p,i._ellipsoid),i._vertexFormat=m.VertexFormat.clone(d,i._vertexFormat),i._cornerType=c,i._granularity=u,i):(F.polylinePositions=o,F.shapePositions=s,F.cornerType=c,F.granularity=u,new V(F))};var A=new a.BoundingRectangle;return V.createGeometry=function(e){var l=e._positions,m=n.arrayRemoveDuplicates(l,t.Cartesian3.equalsEpsilon),y=e._shape;y=o.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(y);if(!(m.length<2||y.length<3))return u.PolygonPipeline.computeWindingOrder2D(y)===u.WindingOrder.CLOCKWISE&&y.reverse(),l=a.BoundingRectangle.fromPoints(y,A),function(e,t,n,a){var l=new p.GeometryAttributes;a.position&&(l.position=new s.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e}));var m,y,g,h,f,b=t.length,v=e.length/3,P=(v-2*b)/(2*b),E=u.PolygonPipeline.triangulate(t),_=(P-1)*b*6+2*E.length,k=c.IndexDatatype.createTypedArray(v,_),L=2*b,V=0;for(w=0;w<P-1;w++){for(m=0;m<b-1;m++)f=(y=2*m+w*b*2)+L,h=(g=y+1)+L,k[V++]=g,k[V++]=y,k[V++]=h,k[V++]=h,k[V++]=y,k[V++]=f;h=(g=1+(y=2*b-2+w*b*2))+L,f=y+L,k[V++]=g,k[V++]=y,k[V++]=h,k[V++]=h,k[V++]=y,k[V++]=f}if(a.st||a.tangent||a.bitangent){for(var x,C,F=new Float32Array(2*v),A=1/(P-1),T=1/n.height,G=n.height/2,D=0,w=0;w<P;w++){for(C=T*(t[0].y+G),F[D++]=x=w*A,F[D++]=C,m=1;m<b;m++)C=T*(t[m].y+G),F[D++]=x,F[D++]=C,F[D++]=x,F[D++]=C;C=T*(t[0].y+G),F[D++]=x,F[D++]=C}for(m=0;m<b;m++)C=T*(t[m].y+G),F[D++]=x=0,F[D++]=C;for(m=0;m<b;m++)C=T*(t[m].y+G),F[D++]=x=(P-1)*A,F[D++]=C;l.st=new s.GeometryAttribute({componentDatatype:r.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:new Float32Array(F)})}var R=v-2*b;for(w=0;w<E.length;w+=3){var B=E[w]+R,S=E[w+1]+R,I=E[w+2]+R;k[V++]=B,k[V++]=S,k[V++]=I,k[V++]=I+b,k[V++]=S+b,k[V++]=B+b}if(e=new s.Geometry({attributes:l,indices:k,boundingSphere:i.BoundingSphere.fromVertices(e),primitiveType:s.PrimitiveType.TRIANGLES}),a.normal&&(e=d.GeometryPipeline.computeNormal(e)),a.tangent||a.bitangent){try{e=d.GeometryPipeline.computeTangentAndBitangent(e)}catch(e){o.oneTimeWarning("polyline-volume-tangent-bitangent","Unable to compute tangents and bitangents for polyline volume geometry")}a.tangent||(e.attributes.tangent=void 0),a.bitangent||(e.attributes.bitangent=void 0),a.st||(e.attributes.st=void 0)}return e}(o.PolylineVolumeGeometryLibrary.computePositions(m,y,l,e,!0),y,l,e._vertexFormat)},function(n,a){return(n=e.defined(a)?V.unpack(n,a):n)._ellipsoid=t.Ellipsoid.clone(n._ellipsoid),V.createGeometry(n)}}));