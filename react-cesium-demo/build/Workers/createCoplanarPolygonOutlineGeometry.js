define(["./arrayRemoveDuplicates-18786327","./Transforms-d5c6ad6e","./Matrix2-ccd5b911","./RuntimeError-346a3079","./ComponentDatatype-93750d1a","./CoplanarPolygonGeometryLibrary-54c559e2","./when-4bbc8319","./GeometryAttribute-c30799b8","./GeometryAttributes-7827a6c2","./GeometryInstance-5f4fe82b","./GeometryPipeline-548e76d2","./IndexDatatype-b7d979a6","./PolygonGeometryLibrary-d35c292d","./combine-83860057","./WebGLConstants-1c8239cc","./OrientedBoundingBox-0a826a8b","./EllipsoidTangentPlane-e000bae1","./AxisAlignedBoundingBox-883f9c89","./IntersectionTests-4d6f5c54","./Plane-18bb00f8","./AttributeCompression-1f045b73","./EncodedCartesian3-08b8d980","./ArcType-98ec98bf","./EllipsoidRhumbLine-aa9e6266","./PolygonPipeline-83fb62b0"],(function(e,t,n,r,o,i,a,y,l,c,p,s,u,d,m,b,g,f,h,P,G,v,L,T,E){"use strict";function A(e){e=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).polygonHierarchy,this._polygonHierarchy=e,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=u.PolygonGeometryLibrary.computeHierarchyPackedLength(e)+1}A.fromPositions=function(e){return new A({polygonHierarchy:{positions:(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).positions}})},A.pack=function(e,t,n){return n=a.defaultValue(n,0),t[n=u.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,n)]=e.packedLength,t};var C={polygonHierarchy:{}};return A.unpack=function(e,t,n){t=a.defaultValue(t,0);var r=u.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);return t=r.startingIndex,delete r.startingIndex,t=e[t],(n=a.defined(n)?n:new A(C))._polygonHierarchy=r,n.packedLength=t,n},A.createGeometry=function(r){var a=r._polygonHierarchy;r=a.positions;if(!((r=e.arrayRemoveDuplicates(r,n.Cartesian3.equalsEpsilon,!0)).length<3)&&i.CoplanarPolygonGeometryLibrary.validOutline(r)){var d=u.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(a,!1);if(0!==d.length){for(var m=[],b=0;b<d.length;b++){var g=new c.GeometryInstance({geometry:function(e){for(var t=e.length,n=new Float64Array(3*t),r=s.IndexDatatype.createTypedArray(t,2*t),i=0,a=0,c=0;c<t;c++){var p=e[c];n[i++]=p.x,n[i++]=p.y,n[i++]=p.z,r[a++]=c,r[a++]=(c+1)%t}var u=new l.GeometryAttributes({position:new y.GeometryAttribute({componentDatatype:o.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})});return new y.Geometry({attributes:u,indices:r,primitiveType:y.PrimitiveType.LINES})}(d[b])});m.push(g)}return r=p.GeometryPipeline.combineInstances(m)[0],a=t.BoundingSphere.fromPoints(a.positions),new y.Geometry({attributes:r.attributes,indices:r.indices,primitiveType:r.primitiveType,boundingSphere:a})}}},function(e,t){return(e=a.defined(t)?A.unpack(e,t):e)._ellipsoid=n.Ellipsoid.clone(e._ellipsoid),A.createGeometry(e)}}));