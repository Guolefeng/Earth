{"version":3,"sources":["../node_modules/cesium/Build/Cesium sync","components/earth/index.js","components/addEntities/index.js","components/add3DTiles/index.js","assets/build.png","components/setMaterial/index.js","config/index.js","components/menu/index.js","pages/home/index.js","layouts/index.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Cesium","defaultAccessToken","window","Earth","useEffect","viewer","document","getElementById","animation","timeline","fullscreenButton","terrainProvider","requestVertexNormals","requestWaterMask","imageryLayers","addImageryProvider","url","subdomains","layer","style","format","tileMatrixSetID","camera","flyTo","destination","fromDegrees","scene","debugShowFramesPerSecond","extend","dropError","addEventListener","dropHandler","name","error","console","log","alert","className","AddEntites","dataSource","CzmlDataSource","load","then","source","dataSources","add","defined","remove","city","primitives","Cesium3DTileset","IonResource","fromAssetId","entity","polyline","entities","position","Cartesian3","box","dimensions","material","Color","RED","withAlpha","outline","outlineColor","BLACK","positions","fromDegreesArray","width","BURLYWOOD","onClick","ALICEBLUE","ImageMaterialProperty","image","BuildPng","CheckerboardMaterialProperty","evenColor","WHITE","oddColor","repeat","Cartesian2","StripeMaterialProperty","offset","orientation","StripeOrientation","VERTICAL","GridMaterialProperty","color","AZURE","cellAlpha","lineCount","lineThickness","PolylineGlowMaterialProperty","glowPower","BLUE","PolylineOutlineMaterialProperty","ORANGE","outlineWidth","MENU","component","CMenu","onSelect","mode","Object","map","Item","Home","useState","cur","setCur","key","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","locale","zhCN"],"mappings":"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","file":"static/js/main.5b6cf337.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 192;","import React, { useEffect } from 'react';\r\nimport './index.css';\r\nimport * as Cesium  from \"cesium/Cesium\";\r\nimport 'cesium/Widgets/widgets.css';\r\n\r\nCesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI1NGFkNmRmNC05NmFkLTRmMDktYTFkMS0yNTE0NjNmOWEwYjMiLCJpZCI6NjA1MDAsImlhdCI6MTYyNTEyMDcyNn0.S14rriO-ggk-vKvkUa3wONp0zSAOEUBBx8tZJRrPzqY';\r\nwindow.Cesium = Cesium;\r\n\r\nconst Earth = () => {\r\n    useEffect(() => {\r\n        const viewer = new Cesium.Viewer(document.getElementById('earth'), {\r\n            animation: false, // 是否创建动画小器件， 左下角仪表\r\n            timeline: false, // 是否显示时间线控件\r\n            fullscreenButton: false, // 右下角全屏按钮\r\n            terrainProvider: Cesium.createWorldTerrain({\r\n                requestVertexNormals: true,\r\n                requestWaterMask: true,\r\n            }),\r\n            // skyBox: new Cesium.SkyBox({\r\n            //     sources: {\r\n            //         positiveX: 'stars/TychoSkymapII.t3_08192x04096_80_px.jpg',\r\n            //         negativeX: 'stars/TychoSkymapII.t3_08192x04096_80_mx.jpg',\r\n            //         positiveY: 'stars/TychoSkymapII.t3_08192x04096_80_py.jpg',\r\n            //         negativeY: 'stars/TychoSkymapII.t3_08192x04096_80_my.jpg',\r\n            //         positiveZ: 'stars/TychoSkymapII.t3_08192x04096_80_pz.jpg',\r\n            //         negativeZ: 'stars/TychoSkymapII.t3_08192x04096_80_mz.jpg'\r\n            //     }\r\n            // })\r\n        });\r\n        // 使用天地图影像\r\n        viewer.imageryLayers.addImageryProvider(\r\n            new Cesium.UrlTemplateImageryProvider({\r\n                url: 'https://t{s}.tianditu.gov.cn/DataServer?T=ibo_w&x={x}&y={y}&l={z}&tk=78c0c5a1844ab8a716f09bc9113d909d',\r\n                subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\r\n                layer: 'tdtIboLayer',\r\n                style: 'default',\r\n                format: 'image/png',\r\n                tileMatrixSetID: 'GoogleMapsCompatible'\r\n            })\r\n        )\r\n        viewer.imageryLayers.addImageryProvider(\r\n            new Cesium.UrlTemplateImageryProvider({\r\n                url: 'https://t{s}.tianditu.gov.cn/DataServer?T=cia_w&x={x}&y={y}&l={z}&tk=78c0c5a1844ab8a716f09bc9113d909d',\r\n                subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\r\n                layer: 'tdtCiaLayer',\r\n                style: 'default',\r\n                format: 'image/png',\r\n                tileMatrixSetID: 'GoogleMapsCompatible'\r\n            })\r\n        )\r\n        // viewer.scene.globe.enableLighting = true;\r\n        viewer.camera.flyTo({\r\n            destination: Cesium.Cartesian3.fromDegrees(116.39, 39.91, 20000000.0),\r\n            // destination: Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0), // 天安门广场\r\n        })\r\n        // 显示帧速\r\n        viewer.scene.debugShowFramesPerSecond = true;\r\n\r\n        //Add basic drag and drop functionality\r\n        viewer.extend(Cesium.viewerDragDropMixin);\r\n        // Show a pop-up alert if we encounter an error when processing a dropped file\r\n        viewer.dropError.addEventListener((dropHandler, name, error) => {\r\n            console.log('Cesium viewer drop error: ', error);\r\n            window.alert(error);\r\n        })\r\n\r\n        window.viewer = viewer;\r\n    }, [])\r\n    return (\r\n        <div id=\"earth\" className=\"earth\" />\r\n    )\r\n}\r\n\r\nexport default Earth;\r\n","import { useEffect } from 'react'\r\n\r\nconst AddEntites = () => {\r\n    useEffect(() => {\r\n        const { viewer, Cesium } = window\r\n        // 通过Entity添加形状\r\n        // viewer.entities.add({\r\n        //     name: 'red box',\r\n        //     position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0),\r\n        //     box: {\r\n        //         dimensions: new Cesium.Cartesian3(40000.0, 30000.0, 50000.0),\r\n        //         material: Cesium.Color.RED.withAlpha(0.5),\r\n        //         outline: true,\r\n        //         outlineColor: Cesium.Color.BLACK,\r\n        //     }\r\n        // })\r\n        // viewer.zoomTo(viewer.entities)\r\n\r\n        // 通过CZML添加\r\n        var czml = [{\r\n            \"id\" : \"document\",\r\n            \"name\" : \"box\",\r\n            \"version\" : \"1.0\"\r\n        },{\r\n            \"id\" : \"shape2\",\r\n            \"name\" : \"Red box with black outline\",\r\n            \"position\" : {\r\n                \"cartographicDegrees\" : [116.39, 40, 0]\r\n            },\r\n            \"box\" : {\r\n                \"dimensions\" : {\r\n                    \"cartesian\": [400.0, 300.0, 200]\r\n                },\r\n                \"material\" : {\r\n                    \"solidColor\" : {\r\n                        \"color\" : {\r\n                            \"rgba\" : [255, 0, 0, 200]\r\n                        }\r\n                    }\r\n                },\r\n                \"outline\" : true,\r\n                \"outlineColor\" : {\r\n                    \"rgba\" : [0, 0, 0, 255]\r\n                }\r\n            }\r\n        }];\r\n\r\n        let dataSource\r\n        Cesium.CzmlDataSource.load(czml).then((source) => {\r\n            dataSource = source\r\n            viewer.dataSources.add(dataSource);\r\n            viewer.flyTo(dataSource);\r\n        });\r\n\r\n        return () => {\r\n            if (Cesium.defined(dataSource)) {\r\n                viewer.dataSources.remove(dataSource)\r\n            }\r\n        }\r\n    }, [])\r\n    return null\r\n}\r\n\r\nexport default AddEntites","import { useEffect } from 'react'\r\n\r\nconst AddEntites = () => {\r\n    useEffect(() => {\r\n        const { viewer, Cesium } = window\r\n        // Load the NYC buildings tileset\r\n        const city = viewer.scene.primitives.add(new Cesium.Cesium3DTileset({ url: Cesium.IonResource.fromAssetId(75343) }))\r\n        viewer.flyTo(city);\r\n        return () => {\r\n            viewer.scene.primitives.remove(city);\r\n        }\r\n    }, [])\r\n    return null\r\n}\r\n\r\nexport default AddEntites","export default __webpack_public_path__ + \"static/media/build.5f056628.png\";","import { useEffect } from 'react'\r\nimport './index.css'\r\nimport { Button } from 'antd'\r\nimport BuildPng from '../../assets/build.png'\r\n\r\nconst AddEntites = () => {\r\n    const { viewer, Cesium } = window\r\n    let entity\r\n    let polyline\r\n\r\n    useEffect(() => {\r\n        // 通过Entity添加形状\r\n        entity = viewer.entities.add({\r\n            name: 'red box',\r\n            position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0),\r\n            box: {\r\n                dimensions: new Cesium.Cartesian3(400000.0, 300000.0, 500000.0),\r\n                material: Cesium.Color.RED.withAlpha(0.5),\r\n                outline: true,\r\n                outlineColor: Cesium.Color.BLACK,\r\n            }\r\n        })\r\n        \r\n        polyline = viewer.entities.add({\r\n            polyline : {\r\n                positions : Cesium.Cartesian3.fromDegreesArray([116.39, 35.91, 100.00, 42.91]),\r\n                width : 10,\r\n                material : Cesium.Color.BURLYWOOD \r\n            }\r\n        });\r\n        \r\n        viewer.flyTo(viewer.entities)\r\n        return () => {\r\n            viewer.entities.remove(entity)\r\n            viewer.entities.remove(polyline)\r\n        }\r\n    }, [])\r\n\r\n    const onColorChange = () => {\r\n        if (entity) {\r\n            // 颜色是最常见的材质，可以将几何形状修改为不同的纯色，达到区分的目的，也可以完成比如鼠标移动到某个建筑，建筑变色之类;使用比较简单,只需要赋值颜色就行了\r\n            entity.box.material = Cesium.Color.ALICEBLUE.withAlpha(0.5)\r\n        }\r\n    }\r\n\r\n    const onImageChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.ImageMaterialProperty({\r\n                image: BuildPng,\r\n                // color: Cesium.Color.BLUE,\r\n                // repeat: new Cesium.Cartesian2(4, 4),\r\n                // transparent: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const onCheckerboardChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.CheckerboardMaterialProperty({\r\n                evenColor: Cesium.Color.WHITE,\r\n                oddColor: Cesium.Color.BLACK,\r\n                repeat: new Cesium.Cartesian2(4, 4),\r\n            });\r\n        }\r\n    }\r\n\r\n    const onStripeChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.StripeMaterialProperty({\r\n                evenColor: Cesium.Color.WHITE,\r\n                oddColor: Cesium.Color.BLACK,\r\n                repeat: 32,\r\n                offset:20,\r\n                orientation: Cesium.StripeOrientation.VERTICAL,\r\n            });\r\n        }\r\n    }\r\n\r\n    const onGridChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.GridMaterialProperty({\r\n                color : Cesium.Color.AZURE,\r\n                cellAlpha : 0.2,\r\n                lineCount : new Cesium.Cartesian2(8, 8),\r\n                lineThickness : new Cesium.Cartesian2(1.0, 3.0)\r\n            });\r\n        }\r\n    }\r\n\r\n    const onPolylineGlowChange = () => {\r\n        if (polyline) {\r\n            polyline.polyline.material = new Cesium.PolylineGlowMaterialProperty({\r\n                glowPower : 0.5,\r\n                color : Cesium.Color.BLUE\r\n            });\r\n        }\r\n    }\r\n\r\n    const onPolylineOutlineChange = () => {\r\n        if (polyline) {\r\n            polyline.polyline.material = new Cesium.PolylineOutlineMaterialProperty({\r\n                color : Cesium.Color.ORANGE,\r\n                outlineWidth : 2,\r\n                outlineColor : Cesium.Color.BLACK\r\n            });\r\n        }\r\n    }\r\n\r\n    return <div className='sm'>\r\n        <Button onClick={onColorChange}>颜色材质</Button>\r\n        <Button onClick={onImageChange}>图片材质</Button>\r\n        <Button onClick={onCheckerboardChange}>棋盘纹理</Button>\r\n        <Button onClick={onStripeChange}>条纹纹理</Button>\r\n        <Button onClick={onGridChange}>网格纹理</Button>\r\n        <Button onClick={onPolylineGlowChange}>线条发光纹理</Button>\r\n        <Button onClick={onPolylineOutlineChange}>线条边框纹理</Button>\r\n    </div>\r\n}\r\n\r\nexport default AddEntites","import AddEntites from '../components/addEntities'\r\nimport Add3DTiles from '../components/add3DTiles'\r\nimport SetMaterial from '../components/setMaterial'\r\n\r\nexport const MENU = {\r\n    0: {\r\n        name: '添加形状',\r\n        component: <AddEntites />,\r\n    },\r\n    1: {\r\n        name: '添加3DTiles',\r\n        component: <Add3DTiles />,\r\n    },\r\n    2: {\r\n        name: '设置材质',\r\n        component: <SetMaterial />,\r\n    }\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport { Menu } from 'antd'\r\nimport { MENU } from '../../config'\r\n\r\nconst CMenu = ({ onSelect = () => {} }) => {\r\n    return <Menu onSelect={onSelect} mode=\"inline\">\r\n        {Object.keys(MENU).map((id) => (<Menu.Item key={id}>{MENU[id].name}</Menu.Item>))}\r\n    </Menu>\r\n}\r\n\r\nexport default CMenu;","import React, { useState } from 'react'\r\nimport './index.css'\r\nimport Menu from '../../components/menu'\r\nimport { MENU } from '../../config'\r\n\r\nconst Home = () => {\r\n    const [cur, setCur] = useState('')\r\n    return <div className=\"home\">\r\n        <Menu onSelect={({ key }) => setCur(MENU[key].component)} />\r\n        {cur ? cur : null}\r\n    </div>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport './index.css'\r\nimport Home from '../pages/home'\r\n\r\nconst Layout = () => {\r\n    return <div className=\"layout\">\r\n        <Home />\r\n    </div>\r\n}\r\n\r\nexport default Layout","import './App.css';\r\nimport Earth from './components/earth';\r\nimport Layout from './layouts';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Earth />\r\n      <Layout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={zhCN}>\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}