{"version":3,"sources":["../node_modules/cesium/Build/Cesium sync","components/earth/index.js","assets/model/castle.gltf","assets/imgs/icon.png","components/addEntities/index.js","components/add3DTiles/index.js","assets/imgs/build.png","components/setMaterial/index.js","config/index.js","components/menu/index.js","pages/home/index.js","layouts/index.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Cesium","defaultAccessToken","window","Earth","useEffect","viewer","document","getElementById","animation","timeline","fullscreenButton","terrainProvider","requestVertexNormals","requestWaterMask","imageryLayers","addImageryProvider","url","subdomains","layer","style","format","tileMatrixSetID","camera","flyTo","destination","fromDegrees","scene","debugShowFramesPerSecond","extend","dropError","addEventListener","dropHandler","name","error","console","log","alert","className","AddEntites","curEntity","genEntity","opt","Entity","computeCircle","radius","positions","i","radians","Math","toRadians","push","Cartesian2","cos","sin","onBtnClick","type","entities","remove","position","Cartesian3","label","text","font","fillColor","Color","RED","LabelStyle","FILL_AND_OUTLINE","outlineWidth","outlineColor","verticalOrigin","VerticalOrigin","BOTTOM","showBackground","backgroundColor","pixelOffset","model","uri","GLTFModel","billboard","image","Icon","width","height","plane","dimensions","fill","material","DARKGREY","withAlpha","Plane","UNIT_Y","point","color","WHITE","pixelSize","polygon","hierarchy","fromDegreesArray","polyline","fromDegreesArrayHeights","PolylineDashMaterialProperty","BLUE","gapColor","YELLOW","dashLength","dashPattern","parseInt","polylineVolume","shape","rectangle","coordinates","Rectangle","GREEN","rotation","extrudedHeight","outline","BLACK","tileset","Tileset","wall","maximumHeights","minimumHeights","box","add","onClick","city","primitives","Cesium3DTileset","IonResource","fromAssetId","entity","BURLYWOOD","ALICEBLUE","ImageMaterialProperty","BuildPng","CheckerboardMaterialProperty","evenColor","oddColor","repeat","StripeMaterialProperty","offset","orientation","StripeOrientation","VERTICAL","GridMaterialProperty","AZURE","cellAlpha","lineCount","lineThickness","PolylineGlowMaterialProperty","glowPower","PolylineOutlineMaterialProperty","ORANGE","MENU","component","CMenu","onSelect","mode","Object","map","Item","Home","useState","cur","setCur","key","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","locale","zhCN"],"mappings":"68CAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,0OCHzBC,MAAWC,mBAAqB,uLAChCC,OAAOF,OAASA,EAEhB,IAiEeG,EAjED,WA4DV,OA3DAC,qBAAU,WACN,IAAMC,EAAS,IAAIL,SAAcM,SAASC,eAAe,SAAU,CAC/DC,WAAW,EACXC,UAAU,EACVC,kBAAkB,EAClBC,gBAAiBX,qBAA0B,CACvCY,sBAAsB,EACtBC,kBAAkB,MAc1BR,EAAOS,cAAcC,mBACjB,IAAIf,6BAAkC,CAClCgB,IAAK,wGACLC,WAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChDC,MAAO,cACPC,MAAO,UACPC,OAAQ,YACRC,gBAAiB,0BAGzBhB,EAAOS,cAAcC,mBACjB,IAAIf,6BAAkC,CAClCgB,IAAK,wGACLC,WAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChDC,MAAO,cACPC,MAAO,UACPC,OAAQ,YACRC,gBAAiB,0BAIzBhB,EAAOiB,OAAOC,MAAM,CAChBC,YAAaxB,aAAkByB,YAAY,OAAQ,MAAO,OAI9DpB,EAAOqB,MAAMC,0BAA2B,EAGxCtB,EAAOuB,OAAO5B,uBAEdK,EAAOwB,UAAUC,kBAAiB,SAACC,EAAaC,EAAMC,GAClDC,QAAQC,IAAI,6BAA8BF,GAC1C/B,OAAOkC,MAAMH,MAGjB/B,OAAOG,OAASA,IACjB,IAEC,qBAAKN,GAAG,QAAQsC,UAAU,W,6DCrEnB,MAA0B,oCCA1B,MAA0B,iC,SCyU1BC,EAlUI,WACf,MAA2BpC,OAAnBG,EAAR,EAAQA,OAAQL,EAAhB,EAAgBA,OAChBI,qBAAU,cAuDP,IAEH,IAgBImC,EAhBEC,EAAY,SAACC,GAAD,OAAS,IAAIzC,EAAO0C,OAAOD,IAE7C,SAASE,EAAcC,GAEnB,IADA,IAAIC,EAAY,GACPC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIC,EAAU/C,EAAOgD,KAAKC,UAAUH,GACpCD,EAAUK,KACN,IAAIlD,EAAOmD,WACPP,EAASI,KAAKI,IAAIL,GAClBH,EAASI,KAAKK,IAAIN,KAI9B,OAAOF,EAIX,IAAMS,EAAa,SAACC,GAMhB,OALIhB,IACAlC,EAAOmD,SAASC,OAAOlB,GACvBA,EAAY,MAGRgB,GACJ,KAAK,EACDhB,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,IAC3DmC,MAAO,CACHC,KAAM,aACNC,KAAM,iBACNC,UAAW/D,EAAOgE,MAAMC,IACxB9C,MAAOnB,EAAOkE,WAAWC,iBACzBC,aAAc,EACdC,aAAcrE,EAAOgE,MAAMC,IAC3BK,eAAgBtE,EAAOuE,eAAeC,OACtCC,gBAAgB,EAChBC,gBAAiB,IAAI1E,EAAOgE,MAAM,KAAO,KAAO,KAAO,IACvDW,YAAa,IAAI3E,EAAOmD,WAAW,GAAI,MAG/C,MACJ,KAAK,EACDZ,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,IAC3DmD,MAAO,CACHC,IAAKC,KAGb,MACJ,KAAK,EACDvC,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,KAC3DsD,UAAW,CACPC,MAAOC,EACPC,MAAO,IACPC,OAAQ,OAGhB,MACJ,KAAK,EACD5C,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,IAC3D2D,MAAO,CACHC,WAAY,IAAIrF,EAAOmD,WAAW,IAAU,KAC5CmC,MAAM,EACNC,SAAUvF,EAAOgE,MAAMwB,SAASC,UAAU,IAE1CL,MAAO,IAAIpF,EAAO0F,MAAM1F,EAAO2D,WAAWgC,OAAQ,MAI1D,MACJ,KAAK,EACDpD,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,IAC3DmE,MAAO,CACHC,MAAO7F,EAAOgE,MAAM8B,MACpBzB,aAAcrE,EAAOgE,MAAMC,IAC3BG,aAAc,IACd2B,UAAW,OAGnB,MACJ,KAAK,EACDxD,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,IAC3DuE,QAAS,CACLC,UAAWjG,EAAO2D,WAAWuC,iBAAiB,EACzC,IACD,IACC,IACD,IACC,IACD,IACC,IACD,IACC,IACD,KAEJX,SAAUvF,EAAOgE,MAAMC,OAG/B,MACJ,KAAK,EACD1B,EAAYC,EAAU,CAClB2D,SAAU,CACNtD,UAAW7C,EAAO2D,WAAWyC,wBAAwB,EAChD,GACD,GACA,MACC,IACD,GACA,OAEJlB,MAAO,EACPK,SAAU,IAAIvF,EAAOqG,6BAA6B,CAC9CR,MAAO7F,EAAOgE,MAAMsC,KACpBC,SAAUvG,EAAOgE,MAAMwC,OACvBC,WAAY,EACZC,YAAaC,SAAS,eAAgB,QAKlD,MACJ,KAAK,EACDpE,EAAYC,EAAU,CAClBoE,eAAgB,CACZ/D,UAAW7C,EAAO2D,WAAWuC,iBAAiB,EACzC,GACD,IACC,GACD,IACC,GACD,KAEJW,MAAOlE,EAAc,KACrB4C,SAAUvF,EAAOgE,MAAMC,OAG/B,MACJ,KAAK,EACD1B,EAAYC,EAAU,CAClBsE,UAAW,CACPC,YAAa/G,EAAOgH,UAAUvF,aACzB,IACD,IACC,IACD,IAEJ8D,SAAUvF,EAAOgE,MAAMiD,MAAMxB,UAAU,IACvCyB,SAAUlH,EAAOgD,KAAKC,UAAU,IAChCkE,eAAgB,IAChBhC,OAAQ,IACRiC,SAAS,EACT/C,aAAcrE,EAAOgE,MAAMqD,SAGnC,MACJ,KAAK,EACD9E,EAAYC,EAAU,CAClBkB,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,IAC3D6F,QAAS,CACLzC,IAAK0C,KAGb,MACJ,KAAK,GACDhF,EAAYC,EAAU,CAClBgF,KAAM,CACF3E,UAAW7C,EAAO2D,WAAWuC,iBAAiB,EACzC,IACD,IACC,MACD,IACC,IACD,IACC,MACD,IACC,IACD,IACC,MACD,IACC,IACD,IACC,KACD,IACC,GACD,IACC,KACD,IACC,GACD,KAEJuB,eAAgB,CACZ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJC,eAAgB,CACZ,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,GAEJnC,SAAUvF,EAAOgE,MAAMsC,KAAKb,UAAU,IACtC2B,SAAS,EACT/C,aAAcrE,EAAOgE,MAAMqD,SAGnC,MACJ,KAAK,GACD9E,EAAYC,EAAU,CAClBR,KAAM,UACN0B,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,MAC3DkG,IAAK,CACDtC,WAAY,IAAIrF,EAAO2D,WAAW,IAAS,IAAS,KACpD4B,SAAUvF,EAAOgE,MAAMwB,SAASC,UAAU,IAC1C2B,SAAS,EACT/C,aAAcrE,EAAOgE,MAAMqD,SAQvC9E,IACAlC,EAAOmD,SAASoE,IAAIrF,GACpBlC,EAAOkB,MAAMgB,KAGrB,OAAO,sBAAKF,UAAU,KAAf,UACH,cAAC,IAAD,CAAQwF,QAAS,kBAAMvE,EAAW,IAAlC,mBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,mBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,uBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,mBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,mBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,qBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,sBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,4BACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,IAAlC,uBAEA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,KAAlC,kBACA,cAAC,IAAD,CAAQuE,QAAS,kBAAMvE,EAAW,KAAlC,qBCtTOhB,EAbI,WAUf,OATAlC,qBAAU,WACN,MAA2BF,OAAnBG,EAAR,EAAQA,OAAQL,EAAhB,EAAgBA,OAEV8H,EAAOzH,EAAOqB,MAAMqG,WAAWH,IAAI,IAAI5H,EAAOgI,gBAAgB,CAAEhH,IAAKhB,EAAOiI,YAAYC,YAAY,UAE1G,OADA7H,EAAOkB,MAAMuG,GACN,WACHzH,EAAOqB,MAAMqG,WAAWtE,OAAOqE,MAEpC,IACI,MCZI,G,OAAA,IAA0B,mCCuH1BxF,EAlHI,WACf,IACI6F,EACAhC,EAFJ,EAA2BjG,OAAnBG,EAAR,EAAQA,OAAQL,EAAhB,EAAgBA,OAIhBI,qBAAU,WAsBN,OApBA+H,EAAS9H,EAAOmD,SAASoE,IAAI,CACzB5F,KAAM,UACN0B,SAAU,IAAI1D,EAAO2D,WAAWlC,YAAY,OAAQ,MAAO,MAC3DkG,IAAK,CACDtC,WAAY,IAAIrF,EAAO2D,WAAW,IAAU,IAAU,KACtD4B,SAAUvF,EAAOgE,MAAMC,IAAIwB,UAAU,IACrC2B,SAAS,EACT/C,aAAcrE,EAAOgE,MAAMqD,SAInClB,EAAW9F,EAAOmD,SAASoE,IAAI,CAC3BzB,SAAW,CACPtD,UAAY7C,EAAO2D,WAAWuC,iBAAiB,CAAC,OAAQ,MAAO,IAAQ,QACvEhB,MAAQ,GACRK,SAAWvF,EAAOgE,MAAMoE,aAIhC/H,EAAOkB,MAAMlB,EAAOmD,UACb,WACHnD,EAAOmD,SAASC,OAAO0E,GACvB9H,EAAOmD,SAASC,OAAO0C,MAE5B,IAwEH,OAAO,sBAAK9D,UAAU,KAAf,UACH,cAAC,IAAD,CAAQwF,QAvEU,WACdM,IAEAA,EAAOR,IAAIpC,SAAWvF,EAAOgE,MAAMqE,UAAU5C,UAAU,MAoE3D,sCACA,cAAC,IAAD,CAAQoC,QAjEU,WACdM,IACAA,EAAOR,IAAIpC,SAAW,IAAIvF,EAAOsI,sBAAsB,CACnDtD,MAAOuD,MA8Df,sCACA,cAAC,IAAD,CAAQV,QAvDiB,WACrBM,IACAA,EAAOR,IAAIpC,SAAW,IAAIvF,EAAOwI,6BAA6B,CAC1DC,UAAWzI,EAAOgE,MAAM8B,MACxB4C,SAAU1I,EAAOgE,MAAMqD,MACvBsB,OAAQ,IAAI3I,EAAOmD,WAAW,EAAG,OAkDzC,sCACA,cAAC,IAAD,CAAQ0E,QA9CW,WACfM,IACAA,EAAOR,IAAIpC,SAAW,IAAIvF,EAAO4I,uBAAuB,CACpDH,UAAWzI,EAAOgE,MAAM8B,MACxB4C,SAAU1I,EAAOgE,MAAMqD,MACvBsB,OAAQ,GACRE,OAAO,GACPC,YAAa9I,EAAO+I,kBAAkBC,aAuC9C,sCACA,cAAC,IAAD,CAAQnB,QAnCS,WACbM,IACAA,EAAOR,IAAIpC,SAAW,IAAIvF,EAAOiJ,qBAAqB,CAClDpD,MAAQ7F,EAAOgE,MAAMkF,MACrBC,UAAY,GACZC,UAAY,IAAIpJ,EAAOmD,WAAW,EAAG,GACrCkG,cAAgB,IAAIrJ,EAAOmD,WAAW,EAAK,OA6BnD,sCACA,cAAC,IAAD,CAAQ0E,QAzBiB,WACrB1B,IACAA,EAASA,SAASZ,SAAW,IAAIvF,EAAOsJ,6BAA6B,CACjEC,UAAY,GACZ1D,MAAQ7F,EAAOgE,MAAMsC,SAqB7B,kDACA,cAAC,IAAD,CAAQuB,QAjBoB,WACxB1B,IACAA,EAASA,SAASZ,SAAW,IAAIvF,EAAOwJ,gCAAgC,CACpE3D,MAAQ7F,EAAOgE,MAAMyF,OACrBrF,aAAe,EACfC,aAAerE,EAAOgE,MAAMqD,UAYpC,sDC/GKqC,EAAO,CAChB,EAAG,CACC1H,KAAM,2BACN2H,UAAW,cAAC,EAAD,KAEf,EAAG,CACC3H,KAAM,sBACN2H,UAAW,cAAC,EAAD,KAEf,EAAG,CACC3H,KAAM,2BACN2H,UAAW,cAAC,EAAD,MCJJC,EAND,SAAC,GAA6B,IAAD,IAA1BC,gBAA0B,MAAf,aAAe,EACvC,OAAO,cAAC,IAAD,CAAMA,SAAUA,EAAUC,KAAK,SAA/B,SACFC,OAAOpK,KAAK+J,GAAMM,KAAI,SAACjK,GAAD,OAAS,cAAC,IAAKkK,KAAN,UAAqBP,EAAK3J,GAAIiC,MAAdjC,SCMzCmK,EARF,WACT,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,OAAO,sBAAKhI,UAAU,OAAf,UACH,cAAC,EAAD,CAAMwH,SAAU,gBAAGS,EAAH,EAAGA,IAAH,OAAaD,EAAOX,EAAKY,GAAKX,cAC7CS,GAAY,SCCNG,EANA,WACX,OAAO,qBAAKlI,UAAU,SAAf,SACH,cAAC,EAAD,OCMOmI,MATf,WACE,OACE,sBAAKnI,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSoI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAgBC,OAAQC,IAAxB,SACE,cAAC,EAAD,QAGJhL,SAASC,eAAe,SAM1BkK,M","file":"static/js/main.01d99460.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 193;","import React, { useEffect } from 'react';\r\nimport './index.css';\r\nimport * as Cesium  from \"cesium/Cesium\";\r\nimport 'cesium/Widgets/widgets.css';\r\n\r\nCesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI1NGFkNmRmNC05NmFkLTRmMDktYTFkMS0yNTE0NjNmOWEwYjMiLCJpZCI6NjA1MDAsImlhdCI6MTYyNTEyMDcyNn0.S14rriO-ggk-vKvkUa3wONp0zSAOEUBBx8tZJRrPzqY';\r\nwindow.Cesium = Cesium;\r\n\r\nconst Earth = () => {\r\n    useEffect(() => {\r\n        const viewer = new Cesium.Viewer(document.getElementById('earth'), {\r\n            animation: false, // 是否创建动画小器件， 左下角仪表\r\n            timeline: false, // 是否显示时间线控件\r\n            fullscreenButton: false, // 右下角全屏按钮\r\n            terrainProvider: Cesium.createWorldTerrain({\r\n                requestVertexNormals: true,\r\n                requestWaterMask: true,\r\n            }),\r\n            // skyBox: new Cesium.SkyBox({\r\n            //     sources: {\r\n            //         positiveX: 'stars/TychoSkymapII.t3_08192x04096_80_px.jpg',\r\n            //         negativeX: 'stars/TychoSkymapII.t3_08192x04096_80_mx.jpg',\r\n            //         positiveY: 'stars/TychoSkymapII.t3_08192x04096_80_py.jpg',\r\n            //         negativeY: 'stars/TychoSkymapII.t3_08192x04096_80_my.jpg',\r\n            //         positiveZ: 'stars/TychoSkymapII.t3_08192x04096_80_pz.jpg',\r\n            //         negativeZ: 'stars/TychoSkymapII.t3_08192x04096_80_mz.jpg'\r\n            //     }\r\n            // })\r\n        });\r\n        // 使用天地图影像\r\n        viewer.imageryLayers.addImageryProvider(\r\n            new Cesium.UrlTemplateImageryProvider({\r\n                url: 'https://t{s}.tianditu.gov.cn/DataServer?T=ibo_w&x={x}&y={y}&l={z}&tk=78c0c5a1844ab8a716f09bc9113d909d',\r\n                subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\r\n                layer: 'tdtIboLayer',\r\n                style: 'default',\r\n                format: 'image/png',\r\n                tileMatrixSetID: 'GoogleMapsCompatible'\r\n            })\r\n        )\r\n        viewer.imageryLayers.addImageryProvider(\r\n            new Cesium.UrlTemplateImageryProvider({\r\n                url: 'https://t{s}.tianditu.gov.cn/DataServer?T=cia_w&x={x}&y={y}&l={z}&tk=78c0c5a1844ab8a716f09bc9113d909d',\r\n                subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\r\n                layer: 'tdtCiaLayer',\r\n                style: 'default',\r\n                format: 'image/png',\r\n                tileMatrixSetID: 'GoogleMapsCompatible'\r\n            })\r\n        )\r\n        // viewer.scene.globe.enableLighting = true;\r\n        viewer.camera.flyTo({\r\n            destination: Cesium.Cartesian3.fromDegrees(116.39, 39.91, 20000000.0),\r\n            // destination: Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0), // 天安门广场\r\n        })\r\n        // 显示帧速\r\n        viewer.scene.debugShowFramesPerSecond = true;\r\n\r\n        //Add basic drag and drop functionality\r\n        viewer.extend(Cesium.viewerDragDropMixin);\r\n        // Show a pop-up alert if we encounter an error when processing a dropped file\r\n        viewer.dropError.addEventListener((dropHandler, name, error) => {\r\n            console.log('Cesium viewer drop error: ', error);\r\n            window.alert(error);\r\n        })\r\n\r\n        window.viewer = viewer;\r\n    }, [])\r\n    return (\r\n        <div id=\"earth\" className=\"earth\" />\r\n    )\r\n}\r\n\r\nexport default Earth;\r\n","export default __webpack_public_path__ + \"static/media/castle.7bae1c2e.gltf\";","export default __webpack_public_path__ + \"static/media/icon.48ec34f4.png\";","import React, { useEffect } from 'react'\r\nimport './index.css'\r\nimport { Button } from 'antd'\r\nimport GLTFModel from '../../assets/model/castle.gltf'\r\nimport Icon from '../../assets/imgs/icon.png'\r\nimport Tileset from '../../assets/model/Tileset/tileset.json'\r\n\r\nconst AddEntites = () => {\r\n    const { viewer, Cesium } = window\r\n    useEffect(() => {\r\n        // 通过Entity添加形状\r\n        // viewer.entities.add({\r\n        //     name: 'red box',\r\n        //     position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0),\r\n        //     box: {\r\n        //         dimensions: new Cesium.Cartesian3(40000.0, 30000.0, 50000.0),\r\n        //         material: Cesium.Color.RED.withAlpha(0.5),\r\n        //         outline: true,\r\n        //         outlineColor: Cesium.Color.BLACK,\r\n        //     }\r\n        // })\r\n        // viewer.zoomTo(viewer.entities)\r\n\r\n        // 通过CZML添加\r\n        // var czml = [{\r\n        //     \"id\" : \"document\",\r\n        //     \"name\" : \"box\",\r\n        //     \"version\" : \"1.0\"\r\n        // },{\r\n        //     \"id\" : \"shape2\",\r\n        //     \"name\" : \"Red box with black outline\",\r\n        //     \"position\" : {\r\n        //         \"cartographicDegrees\" : [116.39, 40, 0]\r\n        //     },\r\n        //     \"box\" : {\r\n        //         \"dimensions\" : {\r\n        //             \"cartesian\": [400.0, 300.0, 200]\r\n        //         },\r\n        //         \"material\" : {\r\n        //             \"solidColor\" : {\r\n        //                 \"color\" : {\r\n        //                     \"rgba\" : [255, 0, 0, 200]\r\n        //                 }\r\n        //             }\r\n        //         },\r\n        //         \"outline\" : true,\r\n        //         \"outlineColor\" : {\r\n        //             \"rgba\" : [0, 0, 0, 255]\r\n        //         }\r\n        //     }\r\n        // }];\r\n\r\n        // let dataSource\r\n        // Cesium.CzmlDataSource.load(czml).then((source) => {\r\n        //     dataSource = source\r\n        //     viewer.dataSources.add(dataSource);\r\n        //     viewer.flyTo(dataSource);\r\n        // });\r\n\r\n        // return () => {\r\n        //     if (Cesium.defined(dataSource)) {\r\n        //         viewer.dataSources.remove(dataSource)\r\n        //     }\r\n        // }\r\n    }, [])\r\n\r\n    const genEntity = (opt) => new Cesium.Entity(opt)\r\n\r\n    function computeCircle(radius) {\r\n        var positions = [];\r\n        for (var i = 0; i < 360; i++) {\r\n            var radians = Cesium.Math.toRadians(i);\r\n            positions.push(\r\n                new Cesium.Cartesian2(\r\n                    radius * Math.cos(radians),\r\n                    radius * Math.sin(radians)\r\n                )\r\n            );\r\n        }\r\n        return positions;\r\n    }\r\n\r\n    let curEntity\r\n    const onBtnClick = (type) => {\r\n        if (curEntity) {\r\n            viewer.entities.remove(curEntity)\r\n            curEntity = null\r\n        }\r\n\r\n        switch (type) {\r\n            case 0:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 50.0),\r\n                    label: {\r\n                        text: 'Oh My lezi',\r\n                        font: '14pt monospace',\r\n                        fillColor: Cesium.Color.RED,\r\n                        style: Cesium.LabelStyle.FILL_AND_OUTLINE,\r\n                        outlineWidth: 2,\r\n                        outlineColor: Cesium.Color.RED,\r\n                        verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n                        showBackground: true,\r\n                        backgroundColor: new Cesium.Color(0.165, 0.165, 0.165, 0.8),\r\n                        pixelOffset: new Cesium.Cartesian2(0, -9)\r\n                    }\r\n                })\r\n                break;\r\n            case 1:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 50.0),\r\n                    model: {\r\n                        uri: GLTFModel,\r\n                    },\r\n                })\r\n                break;\r\n            case 2:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(117.39, 39.91, 1000.0),\r\n                    billboard: {\r\n                        image: Icon,\r\n                        width: 342,\r\n                        height: 362,\r\n                    },\r\n                })\r\n                break;\r\n            case 3:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 50.0),\r\n                    plane: {\r\n                        dimensions: new Cesium.Cartesian2(500000.0, 500000.0),\r\n                        fill: true,\r\n                        material: Cesium.Color.DARKGREY.withAlpha(0.5),\r\n                        // plane: new Cesium.Plane(Cesium.Cartesian3.UNIT_X, 0.0),\r\n                        plane: new Cesium.Plane(Cesium.Cartesian3.UNIT_Y, 0.0),\r\n                        // plane: new Cesium.Plane(Cesium.Cartesian3.UNIT_Z, 0.0),\r\n                    }\r\n                })\r\n                break;\r\n            case 4:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 34.91, 50),\r\n                    point: {\r\n                        color: Cesium.Color.WHITE,\r\n                        outlineColor: Cesium.Color.RED,\r\n                        outlineWidth: 100,\r\n                        pixelSize: 100,\r\n                    },\r\n                })\r\n                break;\r\n            case 5:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 50),\r\n                    polygon: {\r\n                        hierarchy: Cesium.Cartesian3.fromDegreesArray([\r\n                            -115.0,\r\n                            37.0,\r\n                            -115.0,\r\n                            32.0,\r\n                            -107.0,\r\n                            33.0,\r\n                            -102.0,\r\n                            31.0,\r\n                            -102.0,\r\n                            35.0,\r\n                        ]),\r\n                        material: Cesium.Color.RED,\r\n                    },\r\n                })\r\n                break;\r\n            case 6:\r\n                curEntity = genEntity({\r\n                    polyline: {\r\n                        positions: Cesium.Cartesian3.fromDegreesArrayHeights([\r\n                            -75,\r\n                            38,\r\n                            250000,\r\n                            -125,\r\n                            38,\r\n                            250000,\r\n                        ]),\r\n                        width: 5,\r\n                        material: new Cesium.PolylineDashMaterialProperty({\r\n                            color: Cesium.Color.BLUE,\r\n                            gapColor: Cesium.Color.YELLOW,\r\n                            dashLength: 8.0,\r\n                            dashPattern: parseInt(\"110000001111\", 2),\r\n                            // dashPattern: parseInt(\"1010101010101010\", 2),\r\n                        }),\r\n                    },\r\n                })\r\n                break;\r\n            case 7:\r\n                curEntity = genEntity({\r\n                    polylineVolume: {\r\n                        positions: Cesium.Cartesian3.fromDegreesArray([\r\n                            -85.0,\r\n                            32.0,\r\n                            -85.0,\r\n                            36.0,\r\n                            -89.0,\r\n                            36.0,\r\n                        ]),\r\n                        shape: computeCircle(60000.0),\r\n                        material: Cesium.Color.RED,\r\n                    },\r\n                })\r\n                break;\r\n            case 8:\r\n                curEntity = genEntity({\r\n                    rectangle: {\r\n                        coordinates: Cesium.Rectangle.fromDegrees(\r\n                            -110.0,\r\n                            30.0,\r\n                            -100.0,\r\n                            40.0\r\n                        ),\r\n                        material: Cesium.Color.GREEN.withAlpha(0.5),\r\n                        rotation: Cesium.Math.toRadians(45),\r\n                        extrudedHeight: 300000.0,\r\n                        height: 100000.0,\r\n                        outline: true, // height must be set for outline to display\r\n                        outlineColor: Cesium.Color.BLACK,\r\n                    },\r\n                })\r\n                break;\r\n            case 9:\r\n                curEntity = genEntity({\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 50),\r\n                    tileset: {\r\n                        uri: Tileset,\r\n                    },\r\n                })\r\n                break;\r\n            case 10:\r\n                curEntity = genEntity({\r\n                    wall: {\r\n                        positions: Cesium.Cartesian3.fromDegreesArray([\r\n                            -115.0,\r\n                            50.0,\r\n                            -112.5,\r\n                            50.0,\r\n                            -110.0,\r\n                            50.0,\r\n                            -107.5,\r\n                            50.0,\r\n                            -105.0,\r\n                            50.0,\r\n                            -102.5,\r\n                            50.0,\r\n                            -100.0,\r\n                            50.0,\r\n                            -97.5,\r\n                            50.0,\r\n                            -95.0,\r\n                            50.0,\r\n                            -92.5,\r\n                            50.0,\r\n                            -90.0,\r\n                            50.0,\r\n                        ]),\r\n                        maximumHeights: [\r\n                            100000,\r\n                            200000,\r\n                            100000,\r\n                            200000,\r\n                            100000,\r\n                            200000,\r\n                            100000,\r\n                            200000,\r\n                            100000,\r\n                            200000,\r\n                            100000,\r\n                        ],\r\n                        minimumHeights: [\r\n                            0,\r\n                            100000,\r\n                            0,\r\n                            100000,\r\n                            0,\r\n                            100000,\r\n                            0,\r\n                            100000,\r\n                            0,\r\n                            100000,\r\n                            0,\r\n                        ],\r\n                        material: Cesium.Color.BLUE.withAlpha(0.5),\r\n                        outline: true,\r\n                        outlineColor: Cesium.Color.BLACK,\r\n                    },\r\n                })\r\n                break;\r\n            case 11:\r\n                curEntity = genEntity({\r\n                    name: 'red box',\r\n                    position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0),\r\n                    box: {\r\n                        dimensions: new Cesium.Cartesian3(40000.0, 30000.0, 50000.0),\r\n                        material: Cesium.Color.DARKGREY.withAlpha(0.5),\r\n                        outline: true,\r\n                        outlineColor: Cesium.Color.BLACK,\r\n                    }\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (curEntity) {\r\n            viewer.entities.add(curEntity)\r\n            viewer.flyTo(curEntity)\r\n        }\r\n    }\r\n    return <div className='ae'>\r\n        <Button onClick={() => onBtnClick(0)}>label</Button>\r\n        <Button onClick={() => onBtnClick(1)}>model</Button>\r\n        <Button onClick={() => onBtnClick(2)}>billboard</Button>\r\n        <Button onClick={() => onBtnClick(3)}>plane</Button>\r\n        <Button onClick={() => onBtnClick(4)}>point</Button>\r\n        <Button onClick={() => onBtnClick(5)}>polygon</Button>\r\n        <Button onClick={() => onBtnClick(6)}>polyline</Button>\r\n        <Button onClick={() => onBtnClick(7)}>polylineVolume</Button>\r\n        <Button onClick={() => onBtnClick(8)}>rectangle</Button>\r\n        {/* <Button onClick={() => onBtnClick(9)}>tileset</Button> */}\r\n        <Button onClick={() => onBtnClick(10)}>wall</Button>\r\n        <Button onClick={() => onBtnClick(11)}>box</Button>\r\n    </div>\r\n}\r\n\r\nexport default AddEntites","import { useEffect } from 'react'\r\n\r\nconst AddEntites = () => {\r\n    useEffect(() => {\r\n        const { viewer, Cesium } = window\r\n        // Load the NYC buildings tileset\r\n        const city = viewer.scene.primitives.add(new Cesium.Cesium3DTileset({ url: Cesium.IonResource.fromAssetId(75343) }))\r\n        viewer.flyTo(city);\r\n        return () => {\r\n            viewer.scene.primitives.remove(city);\r\n        }\r\n    }, [])\r\n    return null\r\n}\r\n\r\nexport default AddEntites","export default __webpack_public_path__ + \"static/media/build.5f056628.png\";","import { useEffect } from 'react'\r\nimport './index.css'\r\nimport { Button } from 'antd'\r\nimport BuildPng from '../../assets/imgs/build.png'\r\n\r\nconst AddEntites = () => {\r\n    const { viewer, Cesium } = window\r\n    let entity\r\n    let polyline\r\n\r\n    useEffect(() => {\r\n        // 通过Entity添加形状\r\n        entity = viewer.entities.add({\r\n            name: 'red box',\r\n            position: new Cesium.Cartesian3.fromDegrees(116.39, 39.91, 15000.0),\r\n            box: {\r\n                dimensions: new Cesium.Cartesian3(400000.0, 300000.0, 500000.0),\r\n                material: Cesium.Color.RED.withAlpha(0.5),\r\n                outline: true,\r\n                outlineColor: Cesium.Color.BLACK,\r\n            }\r\n        })\r\n        \r\n        polyline = viewer.entities.add({\r\n            polyline : {\r\n                positions : Cesium.Cartesian3.fromDegreesArray([116.39, 35.91, 100.00, 42.91]),\r\n                width : 10,\r\n                material : Cesium.Color.BURLYWOOD \r\n            }\r\n        });\r\n        \r\n        viewer.flyTo(viewer.entities)\r\n        return () => {\r\n            viewer.entities.remove(entity)\r\n            viewer.entities.remove(polyline)\r\n        }\r\n    }, [])\r\n\r\n    const onColorChange = () => {\r\n        if (entity) {\r\n            // 颜色是最常见的材质，可以将几何形状修改为不同的纯色，达到区分的目的，也可以完成比如鼠标移动到某个建筑，建筑变色之类;使用比较简单,只需要赋值颜色就行了\r\n            entity.box.material = Cesium.Color.ALICEBLUE.withAlpha(0.5)\r\n        }\r\n    }\r\n\r\n    const onImageChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.ImageMaterialProperty({\r\n                image: BuildPng,\r\n                // color: Cesium.Color.BLUE,\r\n                // repeat: new Cesium.Cartesian2(4, 4),\r\n                // transparent: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    const onCheckerboardChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.CheckerboardMaterialProperty({\r\n                evenColor: Cesium.Color.WHITE,\r\n                oddColor: Cesium.Color.BLACK,\r\n                repeat: new Cesium.Cartesian2(4, 4),\r\n            });\r\n        }\r\n    }\r\n\r\n    const onStripeChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.StripeMaterialProperty({\r\n                evenColor: Cesium.Color.WHITE,\r\n                oddColor: Cesium.Color.BLACK,\r\n                repeat: 32,\r\n                offset:20,\r\n                orientation: Cesium.StripeOrientation.VERTICAL,\r\n            });\r\n        }\r\n    }\r\n\r\n    const onGridChange = () => {\r\n        if (entity) {\r\n            entity.box.material = new Cesium.GridMaterialProperty({\r\n                color : Cesium.Color.AZURE,\r\n                cellAlpha : 0.2,\r\n                lineCount : new Cesium.Cartesian2(8, 8),\r\n                lineThickness : new Cesium.Cartesian2(1.0, 3.0)\r\n            });\r\n        }\r\n    }\r\n\r\n    const onPolylineGlowChange = () => {\r\n        if (polyline) {\r\n            polyline.polyline.material = new Cesium.PolylineGlowMaterialProperty({\r\n                glowPower : 0.5,\r\n                color : Cesium.Color.BLUE\r\n            });\r\n        }\r\n    }\r\n\r\n    const onPolylineOutlineChange = () => {\r\n        if (polyline) {\r\n            polyline.polyline.material = new Cesium.PolylineOutlineMaterialProperty({\r\n                color : Cesium.Color.ORANGE,\r\n                outlineWidth : 2,\r\n                outlineColor : Cesium.Color.BLACK\r\n            });\r\n        }\r\n    }\r\n\r\n    return <div className='sm'>\r\n        <Button onClick={onColorChange}>颜色材质</Button>\r\n        <Button onClick={onImageChange}>图片材质</Button>\r\n        <Button onClick={onCheckerboardChange}>棋盘纹理</Button>\r\n        <Button onClick={onStripeChange}>条纹纹理</Button>\r\n        <Button onClick={onGridChange}>网格纹理</Button>\r\n        <Button onClick={onPolylineGlowChange}>线条发光纹理</Button>\r\n        <Button onClick={onPolylineOutlineChange}>线条边框纹理</Button>\r\n    </div>\r\n}\r\n\r\nexport default AddEntites","import AddEntites from '../components/addEntities'\r\nimport Add3DTiles from '../components/add3DTiles'\r\nimport SetMaterial from '../components/setMaterial'\r\n\r\nexport const MENU = {\r\n    0: {\r\n        name: '添加形状',\r\n        component: <AddEntites />,\r\n    },\r\n    1: {\r\n        name: '添加3DTiles',\r\n        component: <Add3DTiles />,\r\n    },\r\n    2: {\r\n        name: '设置材质',\r\n        component: <SetMaterial />,\r\n    }\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport { Menu } from 'antd'\r\nimport { MENU } from '../../config'\r\n\r\nconst CMenu = ({ onSelect = () => {} }) => {\r\n    return <Menu onSelect={onSelect} mode=\"inline\">\r\n        {Object.keys(MENU).map((id) => (<Menu.Item key={id}>{MENU[id].name}</Menu.Item>))}\r\n    </Menu>\r\n}\r\n\r\nexport default CMenu;","import React, { useState } from 'react'\r\nimport './index.css'\r\nimport Menu from '../../components/menu'\r\nimport { MENU } from '../../config'\r\n\r\nconst Home = () => {\r\n    const [cur, setCur] = useState('')\r\n    return <div className=\"home\">\r\n        <Menu onSelect={({ key }) => setCur(MENU[key].component)} />\r\n        {cur ? cur : null}\r\n    </div>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport './index.css'\r\nimport Home from '../pages/home'\r\n\r\nconst Layout = () => {\r\n    return <div className=\"layout\">\r\n        <Home />\r\n    </div>\r\n}\r\n\r\nexport default Layout","import './App.css';\r\nimport Earth from './components/earth';\r\nimport Layout from './layouts';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Earth />\r\n      <Layout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={zhCN}>\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}